// 1. Defini√ß√£o das Perguntas e Respostas
const questions = [
    {
        question: "Qual √© o principal componente usado para estruturar o conte√∫do de uma p√°gina web?",
        answers: [
            { text: "CSS", correct: false },
            { text: "HTML", correct: true },
            { text: "JavaScript", correct: false },
            { text: "Python", correct: false },
        ]
    },
    {
        question: "Qual propriedade CSS √© usada para mudar a cor do texto?",
        answers: [
            { text: "background-color", correct: false },
            { text: "font-color", correct: false },
            { text: "color", correct: true },
            { text: "text-style", correct: false },
        ]
    },
    {
        question: "Em JavaScript, qual m√©todo √© usado para selecionar um elemento pelo seu ID?",
        answers: [
            { text: "getElementByClass", correct: false },
            { text: "querySelector", correct: false },
            { text: "getElementById", correct: true },
            { text: "selectElement", correct: false },
        ]
    }
];

// 2. Mapeamento de Elementos do HTML
const questionElement = document.getElementById("question");
const answerButtonsElement = document.getElementById("answer-buttons");
const nextButton = document.getElementById("next-button");
const scoreArea = document.getElementById("score-area");
const finalScoreElement = document.getElementById("final-score");
const restartButton = document.getElementById("restart-button");

// 3. Vari√°veis de Controle do Quiz
let currentQuestionIndex = 0;
let score = 0;

// 4. Fun√ß√£o para Iniciar o Quiz
function startQuiz() {
    currentQuestionIndex = 0;
    score = 0;
    nextButton.classList.add("hide"); // Esconde o bot√£o "Pr√≥xima" no in√≠cio
    scoreArea.classList.add("hide");  // Esconde a √°rea de pontua√ß√£o
    showQuestion();
}

// 5. Fun√ß√£o para Exibir a Pergunta Atual
function showQuestion() {
    resetState(); // Limpa bot√µes e estados anteriores

    let currentQuestion = questions[currentQuestionIndex];
    let questionNo = currentQuestionIndex + 1;
    questionElement.innerHTML = questionNo + ". " + currentQuestion.question;

    // Cria os bot√µes de resposta dinamicamente
    currentQuestion.answers.forEach(answer => {
        const button = document.createElement("button");
        button.innerHTML = answer.text;
        button.classList.add("btn");
        if (answer.correct) {
            button.dataset.correct = answer.correct; // Adiciona um atributo de dado para identificar a resposta correta
        }
        button.addEventListener("click", selectAnswer);
        answerButtonsElement.appendChild(button);
    });
}

// 6. Fun√ß√£o para Limpar o Estado Anterior (bot√µes, mensagens)
function resetState() {
    nextButton.classList.add("hide");
    while(answerButtonsElement.firstChild) {
        answerButtonsElement.removeChild(answerButtonsElement.firstChild);
    }
}

// 7. Fun√ß√£o para Gerenciar a Sele√ß√£o de Resposta
function selectAnswer(e) {
    const selectedBtn = e.target;
    const isCorrect = selectedBtn.dataset.correct === "true";

    if (isCorrect) {
        selectedBtn.classList.add("correct");
        score++;
    } else {
        selectedBtn.classList.add("wrong");
    }

    // Desabilita todos os bot√µes e mostra a resposta correta
    Array.from(answerButtonsElement.children).forEach(button => {
        if (button.dataset.correct === "true") {
            button.classList.add("correct");
        }
        button.disabled = true; // Desabilita o clique ap√≥s a resposta
    });

    // Mostra o bot√£o "Pr√≥xima Pergunta"
    nextButton.classList.remove("hide");
}

// 8. Fun√ß√£o para Mostrar a Pontua√ß√£o Final
function showScore() {
    resetState();
    questionElement.innerHTML = "üéâ Quiz Finalizado!";
    nextButton.classList.add("hide");
    scoreArea.classList.remove("hide");
    finalScoreElement.innerHTML = `${score} de ${questions.length}`;
}

// 9. Fun√ß√£o para Gerenciar o Bot√£o "Pr√≥xima Pergunta"
function handleNextButton() {
    currentQuestionIndex++;
    if (currentQuestionIndex < questions.length) {
        showQuestion(); // Vai para a pr√≥xima pergunta
    } else {
        showScore(); // Se for a √∫ltima, mostra a pontua√ß√£o
    }
}

// 10. Listeners para os Bot√µes Principais
nextButton.addEventListener("click", () => {
    if (currentQuestionIndex < questions.length) {
        handleNextButton();
    } else {
        // Reinicia o quiz
        startQuiz();
    }
});

restartButton.addEventListener("click", startQuiz);

// 11. In√≠cio do Jogo
startQuiz();
